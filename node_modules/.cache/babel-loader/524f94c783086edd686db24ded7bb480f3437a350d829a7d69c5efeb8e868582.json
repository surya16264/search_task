{"ast":null,"code":"var _jsxFileName = \"/home/codilar/Desktop/search-task/src/components/FilterExpandable/FilterExpandable.component.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FilterExpandable = props => {\n  const {\n    id,\n    name,\n    items,\n    handleExpandOptions,\n    total\n  } = props;\n  const renderfilterOption = items => {\n    var _options;\n    const option = (_options = options) === null || _options === void 0 ? void 0 : _options.map(option => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FilterOption\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: option.name,\n          id: option.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: option.id,\n          children: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this);\n    });\n    return option;\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"Filter\",\n    onClick: () => handleExpandOptions(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FilterName\",\n      children: total ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(TextPlaceholder, {\n        length: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: expand ? 'FilterOptions_expanded' : 'FilterOptions',\n      children: renderfilterOption()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = FilterExpandable;\nexport default FilterExpandable;\nvar _c;\n$RefreshReg$(_c, \"FilterExpandable\");","map":{"version":3,"names":["FilterExpandable","props","id","name","items","handleExpandOptions","total","renderfilterOption","_options","option","options","map","_jsxDEV","className","children","type","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_Fragment","TextPlaceholder","length","expand","_c","$RefreshReg$"],"sources":["/home/codilar/Desktop/search-task/src/components/FilterExpandable/FilterExpandable.component.js"],"sourcesContent":["export const FilterExpandable = (props) => {\n  const { id, name, items, handleExpandOptions, total } = props;\n\n  const renderfilterOption = (items) => {\n    const option = options?.map((option) => {\n        return (\n            <div className='FilterOption'>\n                <input \n                    type='checkbox'\n                    value={ option.name }\n                    id={ option.id }\n                />\n                <label id={ option.id }>{option.name}</label>\n            </div>\n        );\n    });\n\n    return option;\n}\n\n\n  return (\n    <article key={id} className='Filter' onClick={ () => handleExpandOptions() }>\n        <div className='FilterName'>\n            { total ? \n            (<>\n                <p>{name}</p>\n                <span>+</span>\n            </> ) :\n                <TextPlaceholder length='medium' /> }\n        </div>\n        <div className={ expand ? 'FilterOptions_expanded' : 'FilterOptions' }>\n            { renderfilterOption() }\n        </div>\n    </article>\n  )\n};\n\nexport default FilterExpandable;\n"],"mappings":";;;AAAA,OAAO,MAAMA,gBAAgB,GAAIC,KAAK,IAAK;EACzC,MAAM;IAAEC,EAAE;IAAEC,IAAI;IAAEC,KAAK;IAAEC,mBAAmB;IAAEC;EAAM,CAAC,GAAGL,KAAK;EAE7D,MAAMM,kBAAkB,GAAIH,KAAK,IAAK;IAAA,IAAAI,QAAA;IACpC,MAAMC,MAAM,IAAAD,QAAA,GAAGE,OAAO,cAAAF,QAAA,uBAAPA,QAAA,CAASG,GAAG,CAAEF,MAAM,IAAK;MACpC,oBACIG,OAAA;QAAKC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBF,OAAA;UACIG,IAAI,EAAC,UAAU;UACfC,KAAK,EAAGP,MAAM,CAACN,IAAM;UACrBD,EAAE,EAAGO,MAAM,CAACP;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFR,OAAA;UAAOV,EAAE,EAAGO,MAAM,CAACP,EAAI;UAAAY,QAAA,EAAEL,MAAM,CAACN;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAEd,CAAC,CAAC;IAEF,OAAOX,MAAM;EACjB,CAAC;EAGC,oBACEG,OAAA;IAAkBC,SAAS,EAAC,QAAQ;IAACQ,OAAO,EAAGA,CAAA,KAAMhB,mBAAmB,CAAC,CAAG;IAAAS,QAAA,gBACxEF,OAAA;MAAKC,SAAS,EAAC,YAAY;MAAAC,QAAA,EACrBR,KAAK,gBACNM,OAAA,CAAAU,SAAA;QAAAR,QAAA,gBACGF,OAAA;UAAAE,QAAA,EAAIX;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbR,OAAA;UAAAE,QAAA,EAAM;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,eAChB,CAAC,gBACCR,OAAA,CAACW,eAAe;QAACC,MAAM,EAAC;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNR,OAAA;MAAKC,SAAS,EAAGY,MAAM,GAAG,wBAAwB,GAAG,eAAiB;MAAAX,QAAA,EAChEP,kBAAkB,CAAC;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA,GAXIlB,EAAE;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAYP,CAAC;AAEd,CAAC;AAACM,EAAA,GApCW1B,gBAAgB;AAsC7B,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}