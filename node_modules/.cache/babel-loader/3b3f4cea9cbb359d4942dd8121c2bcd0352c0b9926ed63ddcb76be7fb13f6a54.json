{"ast":null,"code":"import axios from \"axios\";\nexport const fetchSearchData = async (searchText = '', pageNumber = 1) => {\n  console.log(searchText, 'util');\n  const url = `https://api-r1.tagalys.com/v1/search?q=${searchText}&page=${pageNumber}`;\n  const data = {\n    'per_page': '16',\n    'request': [\"total\", 'results', 'details', 'sort_options', 'filters', 'sort_options'],\n    'identification[client_code]': '92D5626DBFD74912',\n    'identification[api_key]': '5dff8cbc1c833937d5b6ff490de6639b',\n    'identification[store_id]': '77435339050'\n  };\n  let config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: url,\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    data: data\n  };\n  try {\n    await axios.request(config).then(response => {\n      console.log(response.data);\n      return response.data;\n    });\n  } catch (err) {\n    throw new Error('Invaild Error');\n  }\n};","map":{"version":3,"names":["axios","fetchSearchData","searchText","pageNumber","console","log","url","data","config","method","maxBodyLength","Infinity","headers","request","then","response","err","Error"],"sources":["/home/codilar/Desktop/search-task/src/util/fetchApi/fetchApi.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const fetchSearchData = async(searchText = '', pageNumber=1) => {\n    console.log(searchText, 'util');\n    const url = `https://api-r1.tagalys.com/v1/search?q=${searchText}&page=${pageNumber}`;\n\n    const data = {\n        'per_page': '16',\n        'request':  [\"total\", 'results', 'details','sort_options', 'filters', 'sort_options'],\n        'identification[client_code]': '92D5626DBFD74912',\n        'identification[api_key]': '5dff8cbc1c833937d5b6ff490de6639b',\n        'identification[store_id]': '77435339050'\n    }\n\n    let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: url,\n        headers: { \n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        data: data\n      };\n\n    try {\n      await axios.request(config).then((response) => {\n        console.log(response.data);\n        return response.data;\n      });\n      \n    } catch(err) {\n       throw new Error('Invaild Error');\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAMC,UAAU,GAAG,EAAE,EAAEC,UAAU,GAAC,CAAC,KAAK;EACnEC,OAAO,CAACC,GAAG,CAACH,UAAU,EAAE,MAAM,CAAC;EAC/B,MAAMI,GAAG,GAAI,0CAAyCJ,UAAW,SAAQC,UAAW,EAAC;EAErF,MAAMI,IAAI,GAAG;IACT,UAAU,EAAE,IAAI;IAChB,SAAS,EAAG,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAC,cAAc,EAAE,SAAS,EAAE,cAAc,CAAC;IACrF,6BAA6B,EAAE,kBAAkB;IACjD,yBAAyB,EAAE,kCAAkC;IAC7D,0BAA0B,EAAE;EAChC,CAAC;EAED,IAAIC,MAAM,GAAG;IACTC,MAAM,EAAE,MAAM;IACdC,aAAa,EAAEC,QAAQ;IACvBL,GAAG,EAAEA,GAAG;IACRM,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDL,IAAI,EAAEA;EACR,CAAC;EAEH,IAAI;IACF,MAAMP,KAAK,CAACa,OAAO,CAACL,MAAM,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAK;MAC7CX,OAAO,CAACC,GAAG,CAACU,QAAQ,CAACR,IAAI,CAAC;MAC1B,OAAOQ,QAAQ,CAACR,IAAI;IACtB,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAMS,GAAG,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EACnC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}