{"ast":null,"code":"var _jsxFileName = \"/home/codilar/Desktop/search-task/src/components/FilterExpandable/FilterExpandable.component.js\";\nimport TextPlaceholder from '../TextPlaceholder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FilterExpandable = props => {\n  const {\n    id,\n    name,\n    items,\n    handleExpandOptions,\n    total,\n    expand\n  } = props;\n  const renderfilterOption = () => {\n    const option = items === null || items === void 0 ? void 0 : items.map(option => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FilterOption\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: option.name,\n          id: option.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: option.id,\n          children: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this);\n    });\n    return option;\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"Filter\",\n    onClick: () => handleExpandOptions(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FilterName\",\n      children: total ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(TextPlaceholder, {\n        length: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: expand ? 'FilterOptions_expanded' : 'FilterOptions',\n      children: renderfilterOption()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = FilterExpandable;\nexport default FilterExpandable;\nvar _c;\n$RefreshReg$(_c, \"FilterExpandable\");","map":{"version":3,"names":["TextPlaceholder","jsxDEV","_jsxDEV","Fragment","_Fragment","FilterExpandable","props","id","name","items","handleExpandOptions","total","expand","renderfilterOption","option","map","className","children","type","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["/home/codilar/Desktop/search-task/src/components/FilterExpandable/FilterExpandable.component.js"],"sourcesContent":["import TextPlaceholder from '../TextPlaceholder';\n\nexport const FilterExpandable = (props) => {\n  const { id, name, items, handleExpandOptions, total, expand } = props;\n\n  const renderfilterOption = () => {\n    const option = items?.map((option) => {\n        return (\n            <div className='FilterOption'>\n                <input \n                    type='checkbox'\n                    value={ option.name }\n                    id={ option.id }\n                />\n                <label id={ option.id }>{option.name}</label>\n            </div>\n        );\n    });\n\n    return option;\n}\n\n\n  return (\n    <article key={id} className='Filter' onClick={ () => handleExpandOptions() }>\n        <div className='FilterName'>\n            { total ? \n            (<>\n                <p>{name}</p>\n                <span>+</span>\n            </> ) :\n                <TextPlaceholder length='medium' /> }\n        </div>\n        <div className={ expand ? 'FilterOptions_expanded' : 'FilterOptions' }>\n            { renderfilterOption() }\n        </div>\n    </article>\n  )\n};\n\nexport default FilterExpandable;\n"],"mappings":";AAAA,OAAOA,eAAe,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,OAAO,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EACzC,MAAM;IAAEC,EAAE;IAAEC,IAAI;IAAEC,KAAK;IAAEC,mBAAmB;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGN,KAAK;EAErE,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,MAAM,GAAGL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,GAAG,CAAED,MAAM,IAAK;MAClC,oBACIZ,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBf,OAAA;UACIgB,IAAI,EAAC,UAAU;UACfC,KAAK,EAAGL,MAAM,CAACN,IAAM;UACrBD,EAAE,EAAGO,MAAM,CAACP;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFrB,OAAA;UAAOK,EAAE,EAAGO,MAAM,CAACP,EAAI;UAAAU,QAAA,EAAEH,MAAM,CAACN;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAEd,CAAC,CAAC;IAEF,OAAOT,MAAM;EACjB,CAAC;EAGC,oBACEZ,OAAA;IAAkBc,SAAS,EAAC,QAAQ;IAACQ,OAAO,EAAGA,CAAA,KAAMd,mBAAmB,CAAC,CAAG;IAAAO,QAAA,gBACxEf,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAC,QAAA,EACrBN,KAAK,gBACNT,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACGf,OAAA;UAAAe,QAAA,EAAIT;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbrB,OAAA;UAAAe,QAAA,EAAM;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,eAChB,CAAC,gBACCrB,OAAA,CAACF,eAAe;QAACyB,MAAM,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNrB,OAAA;MAAKc,SAAS,EAAGJ,MAAM,GAAG,wBAAwB,GAAG,eAAiB;MAAAK,QAAA,EAChEJ,kBAAkB,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA,GAXIhB,EAAE;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAYP,CAAC;AAEd,CAAC;AAACG,EAAA,GApCWrB,gBAAgB;AAsC7B,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}